
#include "stm32l4xx_hal.h"
#include "stm32l4xx.h"


/*UART2 is connected on APB2 bus
 * PA2 = USART2_TX
 * PA3 = USART2_RX
 */
UART_HandleTypeDef huart2;
char msg[20] = "Hello All Welcome\r\n";

void uart_init(void);

int main()
{
	HAL_Init();
	uart_init();
	while(1)
	{
		HAL_UART_Transmit(&huart2, (uint8_t *)msg, 20, 100);
		HAL_Delay(500);
	}
}

void uart_init(void)
{

	GPIO_InitTypeDef GPIO_InitStruct = {0};
	//Enable clock for UART pins
	__HAL_RCC_GPIOA_CLK_ENABLE();

	//Enable UART module clock access
	__HAL_RCC_USART2_CLK_ENABLE();

	//Configure GPIO pins as alternate functionality pins for UART2
	GPIO_InitStruct.Pin   = GPIO_PIN_2 | GPIO_PIN_3;
	GPIO_InitStruct.Mode  = GPIO_MODE_AF_PP;
	GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
	GPIO_InitStruct.Pull  = GPIO_NOPULL;
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;

	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);


	//COnfigure UART module
	huart2.Instance = USART2;
	huart2.Init.BaudRate = 115200;
	huart2.Init.WordLength = UART_WORDLENGTH_8B;
	huart2.Init.StopBits = UART_STOPBITS_1;
	huart2.Init.Mode = UART_MODE_TX_RX;
	huart2.Init.Parity = UART_PARITY_NONE;
	huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
	huart2.Init.OverSampling = UART_OVERSAMPLING_16;

	HAL_UART_Init(&huart2);

}
void SysTick_Handler(void)
{
	HAL_IncTick();
}
